"""
–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∏ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∫—É—Ä—å–µ—Ä—Å–∫–æ–≥–æ –±–æ—Ç–∞.

–≠—Ç–æ—Ç –º–æ–¥—É–ª—å —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä:
- Reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã (–æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤–º–µ—Å—Ç–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã)
- Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã (–ø—Ä–∏–∫—Ä–µ–ø–ª—è—é—Ç—Å—è –∫ —Å–æ–æ–±—â–µ–Ω–∏—è–º)

–í—Å–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å–æ–∑–¥–∞—é—Ç—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –±–∏–ª–¥–µ—Ä–æ–≤ aiogram 3.x
–¥–ª—è –ª—É—á—à–µ–π –≥–∏–±–∫–æ—Å—Ç–∏ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤ —ç–∫—Ä–∞–Ω–∞.
"""

from typing import List, Optional
from aiogram.types import (
    ReplyKeyboardMarkup, 
    KeyboardButton,
    InlineKeyboardMarkup,
    InlineKeyboardButton
)
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder

from config import AVAILABLE_ROUTES
from utils.callback_manager import (
    create_route_callback, create_route_point_callback, create_photo_callback,
    create_lab_data_callback, create_specific_lab_callback, create_lab_photo_callback,
    create_lab_comment_callback, create_back_to_route_callback
)


def get_main_menu_keyboard() -> ReplyKeyboardMarkup:
    """
    –°–æ–∑–¥–∞—ë—Ç –≥–ª–∞–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –º–µ–Ω—é –±–æ—Ç–∞.
    
    –≠—Ç–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è, –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:
    - –í—ã–±–æ—Ä –Ω–æ–≤–æ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞
    - –ü—Ä–æ—Å–º–æ—Ç—Ä –∏—Å—Ç–æ—Ä–∏–∏ –º–∞—Ä—à—Ä—É—Ç–æ–≤
    - –ü–æ–º–æ—â—å
    
    Returns:
        ReplyKeyboardMarkup: –ì–æ—Ç–æ–≤–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    """
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º ReplyKeyboardBuilder –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    builder = ReplyKeyboardBuilder()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    builder.add(KeyboardButton(text="üöö –í—ã–±—Ä–∞—Ç—å –º–∞—Ä—à—Ä—É—Ç"))
    builder.add(KeyboardButton(text="üìä –ú–æ–∏ –º–∞—Ä—à—Ä—É—Ç—ã"))
    builder.add(KeyboardButton(text="‚ùì –ü–æ–º–æ—â—å"))
    builder.add(KeyboardButton(text="‚ÑπÔ∏è –û –±–æ—Ç–µ"))
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫: 2 –∫–Ω–æ–ø–∫–∏ –≤ –ø–µ—Ä–≤–æ–º —Ä—è–¥—É, 2 –≤–æ –≤—Ç–æ—Ä–æ–º
    builder.adjust(2, 2)
    
    return builder.as_markup(
        resize_keyboard=True,  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥–≥–æ–Ω—è–µ—Ç —Ä–∞–∑–º–µ—Ä –ø–æ–¥ —ç–∫—Ä–∞–Ω
        one_time_keyboard=False,  # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Å—Ç–∞—ë—Ç—Å—è –≤–∏–¥–∏–º–æ–π
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ..."  # –ü–æ–¥—Å–∫–∞–∑–∫–∞ –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
    )


def get_cities_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞—ë—Ç inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –≥–æ—Ä–æ–¥–æ–≤ –º–∞—Ä—à—Ä—É—Ç–∞.
    
    –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–Ω–æ–ø–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
    –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ AVAILABLE_ROUTES.
    
    Returns:
        InlineKeyboardMarkup: Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –≥–æ—Ä–æ–¥–∞–º–∏
    """
    builder = InlineKeyboardBuilder()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    for city_name in AVAILABLE_ROUTES.keys():
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ—á–µ–∫ –≤ –º–∞—Ä—à—Ä—É—Ç–µ
        points_count = len(AVAILABLE_ROUTES[city_name])
        
        # –°–æ–∑–¥–∞—ë–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ —Ç–æ—á–µ–∫
        button_text = f"{city_name} ({points_count} —Ç–æ—á–µ–∫)"
        
        builder.add(InlineKeyboardButton(
            text=button_text,
            callback_data=f"city:{city_name}"
        ))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã
    builder.add(InlineKeyboardButton(
        text="‚ùå –û—Ç–º–µ–Ω–∞",
        callback_data="cancel_city_selection"
    ))
    
    # –†–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ –æ–¥–Ω–æ–π –≤ —Ä—è–¥—É –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
    builder.adjust(1)
    
    return builder.as_markup()


def get_route_points_keyboard(city_name: str, current_point_index: int = 0) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ—á–µ–∫ –º–∞—Ä—à—Ä—É—Ç–∞.
    
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–∞ –∏ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è.
    
    Args:
        city_name: –ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞
        current_point_index: –ò–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–π —Ç–æ—á–∫–∏ –º–∞—Ä—à—Ä—É—Ç–∞
        
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å —Ç–æ—á–∫–∞–º–∏ –º–∞—Ä—à—Ä—É—Ç–∞
    """
    if city_name not in AVAILABLE_ROUTES:
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –µ—Å–ª–∏ –≥–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω
        return InlineKeyboardBuilder().as_markup()
    
    builder = InlineKeyboardBuilder()
    route_points = AVAILABLE_ROUTES[city_name]
    
    # –°–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π —Ç–æ—á–∫–∏ –º–∞—Ä—à—Ä—É—Ç–∞
    for index, point in enumerate(route_points):
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Ç–æ—á–∫–∏
        if index < current_point_index:
            status_emoji = "‚úÖ"  # –ó–∞–≤–µ—Ä—à–µ–Ω–∞
        elif index == current_point_index:
            status_emoji = "üìç"  # –¢–µ–∫—É—â–∞—è
        else:
            status_emoji = "‚è≥"  # –û–∂–∏–¥–∞–µ—Ç
        
        button_text = f"{status_emoji} {point['organization']} - {point['name']}"
        
        # –ö–Ω–æ–ø–∫–∏ —Ç–æ—á–µ–∫ –Ω–µ –∞–∫—Ç–∏–≤–Ω—ã, —Å–ª—É–∂–∞—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        builder.add(InlineKeyboardButton(
            text=button_text,
            callback_data=f"point_info:{index}"
        ))
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    if current_point_index < len(route_points):
        # –ù–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏/–ø—Ä–æ–ø—É—Å–∫–∞ —Ç–æ—á–∫–∏
        builder.add(
            InlineKeyboardButton(
                text="üì∏ –û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ—á–∫—É",
                callback_data=f"process_point:{current_point_index}"
            ),
            InlineKeyboardButton(
                text="‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ç–æ—á–∫—É",
                callback_data=f"skip_point:{current_point_index}"
            )
        )
    
    # –ö–Ω–æ–ø–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–∞ (–¥–æ—Å—Ç—É–ø–Ω–∞ –∫–æ–≥–¥–∞ –≤—Å–µ —Ç–æ—á–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã)
    if current_point_index >= len(route_points):
        builder.add(InlineKeyboardButton(
            text="üèÅ –ó–∞–≤–µ—Ä—à–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç",
            callback_data="complete_route"
        ))
    
    # –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã –º–∞—Ä—à—Ä—É—Ç–∞
    builder.add(InlineKeyboardButton(
        text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç",
        callback_data="cancel_route"
    ))
    
    # –†–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫–∏: —Ç–æ—á–∫–∏ –ø–æ –æ–¥–Ω–æ–π –≤ —Ä—è–¥—É, —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –≤ –∫–æ–Ω—Ü–µ
    points_count = len(route_points)
    adjust_args = [1] * points_count + [2]  # –Ω–∞–ø—Ä–∏–º–µ—Ä [1,1,1,2]
    builder.adjust(*adjust_args)
    
    return builder.as_markup()


def get_confirmation_keyboard(confirm_text: str = "‚úÖ –î–∞", 
                            cancel_text: str = "‚ùå –ù–µ—Ç",
                            confirm_callback: str = "confirm",
                            cancel_callback: str = "cancel") -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è.
    
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    —Å –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–º–∏ —Ç–µ–∫—Å—Ç–∞–º–∏ –∏ callback_data.
    
    Args:
        confirm_text: –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        cancel_text: –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –æ—Ç–º–µ–Ω—ã
        confirm_callback: Callback data –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        cancel_callback: Callback data –¥–ª—è –æ—Ç–º–µ–Ω—ã
        
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    """
    builder = InlineKeyboardBuilder()
    
    builder.add(
        InlineKeyboardButton(text=confirm_text, callback_data=confirm_callback),
        InlineKeyboardButton(text=cancel_text, callback_data=cancel_callback)
    )
    
    # –†–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –æ–¥–Ω–æ–º —Ä—è–¥—É
    builder.adjust(2)
    
    return builder.as_markup()


def get_complete_route_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é –∏—Ç–æ–≥–æ–≤ –ø–æ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è–º.
    
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –≤—Å–µ—Ö —Ç–æ—á–µ–∫ –º–∞—Ä—à—Ä—É—Ç–∞.
    –¢–µ–ø–µ—Ä—å –≤–º–µ—Å—Ç–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å—Ä–∞–∑—É –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é –¥–∞–Ω–Ω—ã—Ö –ø–æ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è–º.
    
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è–º
    """
    builder = InlineKeyboardBuilder()
    
    builder.add(
        InlineKeyboardButton(
            text="üìã –ó–∞–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è–º",
            callback_data="start_lab_summaries"
        )
    )
    
    return builder.as_markup()


def get_organizations_keyboard(organizations: List[str]) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏.
    
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –¥–æ—Å—Ç–∞–≤–æ–∫ –∏–ª–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö.
    
    Args:
        organizations: –°–ø–∏—Å–æ–∫ –Ω–∞–∑–≤–∞–Ω–∏–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π
        
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º–∏
    """
    builder = InlineKeyboardBuilder()
    
    for org in organizations:
        builder.add(InlineKeyboardButton(
            text=f"üè¢ {org}",
            callback_data=f"org:{org}"
        ))
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Å–µ—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π
    builder.add(InlineKeyboardButton(
        text="üìã –í—Å–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏",
        callback_data="org:all"
    ))
    
    # –†–∞–∑–º–µ—â–∞–µ–º –ø–æ –æ–¥–Ω–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –≤ —Ä—è–¥—É
    builder.adjust(1)
    
    return builder.as_markup()


def get_boxes_input_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –≤–≤–æ–¥–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–æ—Ä–æ–±–æ–∫.
    
    –ü—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è –≤–≤–æ–¥–∞.
    
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å —á–∏—Å–ª–∞–º–∏
    """
    builder = InlineKeyboardBuilder()
    
    # –ß–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    common_values = [1, 2, 3, 5, 10, 15, 20, 25]
    
    for value in common_values:
        builder.add(InlineKeyboardButton(
            text=str(value),
            callback_data=f"boxes:{value}"
        ))
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –≤–≤–æ–¥–∞
    builder.add(InlineKeyboardButton(
        text="‚úçÔ∏è –í–≤–µ—Å—Ç–∏ –¥—Ä—É–≥–æ–µ —á–∏—Å–ª–æ",
        callback_data="boxes:manual"
    ))
    
    # –†–∞–∑–º–µ—â–∞–µ–º —á–∏—Å–ª–∞ –ø–æ 4 –≤ —Ä—è–¥—É
    builder.adjust(4, 4, 1)
    
    return builder.as_markup()


def get_navigation_keyboard(has_prev: bool = False, has_next: bool = False) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏.
    
    Args:
        has_prev: –ï—Å—Ç—å –ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
        has_next: –ï—Å—Ç—å –ª–∏ —Å–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
        
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    """
    builder = InlineKeyboardBuilder()
    
    if has_prev:
        builder.add(InlineKeyboardButton(
            text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
            callback_data="nav:prev"
        ))
    
    if has_next:
        builder.add(InlineKeyboardButton(
            text="–í–ø–µ—Ä—ë–¥ ‚û°Ô∏è",
            callback_data="nav:next"
        ))
    
    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    builder.add(InlineKeyboardButton(
        text="üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        callback_data="nav:main"
    ))
    
    # –†–∞–∑–º–µ—â–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–Ω–æ–ø–æ–∫
    if has_prev and has_next:
        builder.adjust(2, 1)  # –ù–∞–≤–∏–≥–∞—Ü–∏—è –≤ –æ–¥–Ω–æ–º —Ä—è–¥—É, –º–µ–Ω—é –æ—Ç–¥–µ–ª—å–Ω–æ
    else:
        builder.adjust(1)  # –í—Å–µ –∫–Ω–æ–ø–∫–∏ –æ—Ç–¥–µ–ª—å–Ω–æ
    
    return builder.as_markup()


def get_photo_actions_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–µ–π.
    
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä–≤–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å —Ç–æ—á–∫–∏ –º–∞—Ä—à—Ä—É—Ç–∞.
    
    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ –∏ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è
    """
    builder = InlineKeyboardBuilder()
    
    builder.add(
        InlineKeyboardButton(
            text="üì∏ –î–æ–±–∞–≤–∏—Ç—å –µ—â–µ —Ñ–æ—Ç–æ",
            callback_data="add_more_photos"
        ),
        InlineKeyboardButton(
            text="üì¶ –£–∫–∞–∑–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤",
            callback_data="proceed_to_boxes"
        )
    )
    
    # –†–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ –æ–¥–Ω–æ–π –≤ —Ä—è–¥—É
    builder.adjust(1)
    
    return builder.as_markup()


def get_finish_photos_keyboard(photos_count: int) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π.
    
    Args:
        photos_count: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
    
    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    """
    builder = InlineKeyboardBuilder()
    
    builder.add(
        InlineKeyboardButton(
            text=f"‚úÖ –ì–æ—Ç–æ–≤–æ ({photos_count} —Ñ–æ—Ç–æ)",
            callback_data="finish_photos"
        ),
        InlineKeyboardButton(
            text="üì∏ –î–æ–±–∞–≤–∏—Ç—å –µ—â–µ",
            callback_data="add_one_more_photo"
        )
    )
    
    # –†–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ –æ–¥–Ω–æ–π –≤ —Ä—è–¥—É
    builder.adjust(1)
    
    return builder.as_markup()


def get_point_data_management_keyboard(
    has_photos: bool = False, 
    has_containers: bool = False, 
    has_comment: bool = False,
    photos_count: int = 0,
    containers_count: int = None,
    comment_text: str = ""
) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã–º–∏ —Ç–æ—á–∫–∏ –º–∞—Ä—à—Ä—É—Ç–∞.
    
    –ü–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ—Ç–æ, –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π.
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç" —Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã.
    
    Args:
        has_photos: –ï—Å—Ç—å –ª–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
        has_containers: –£–∫–∞–∑–∞–Ω–æ –ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
        has_comment: –î–æ–±–∞–≤–ª–µ–Ω –ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
        photos_count: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
        containers_count: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
        comment_text: –¢–µ–∫—Å—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è (–¥–ª—è –ø—Ä–µ–≤—å—é)
    
    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã–º–∏
    """
    builder = InlineKeyboardBuilder()
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
    if has_photos:
        photo_text = f"üì∏ –§–æ—Ç–æ ({photos_count} —à—Ç.) ‚úÖ"
        photo_callback = "edit_photos"
    else:
        photo_text = "üì∏ –î–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ"
        photo_callback = "add_photos"
    
    builder.add(InlineKeyboardButton(text=photo_text, callback_data=photo_callback))
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    if has_containers:
        containers_text = f"üì¶ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã ({containers_count if containers_count is not None else 0} —à—Ç.) ‚úÖ"
        containers_callback = "edit_containers"
    else:
        containers_text = "üì¶ –£–∫–∞–∑–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
        containers_callback = "add_containers"
    
    builder.add(InlineKeyboardButton(text=containers_text, callback_data=containers_callback))
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è  
    if has_comment:
        comment_preview = comment_text[:20] + "..." if len(comment_text) > 20 else comment_text
        comment_text = f"üìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π ({comment_preview}) ‚úÖ"
        comment_callback = "edit_comment"
    else:
        comment_text = "üìù –î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"
        comment_callback = "add_comment"
    
    builder.add(InlineKeyboardButton(text=comment_text, callback_data=comment_callback))
    
    # –ö–Ω–æ–ø–∫–∞ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç" - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã
    # has_containers –º–æ–∂–µ—Ç –±—ã—Ç—å True –¥–∞–∂–µ –ø—Ä–∏ 0 –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞—Ö
    if has_photos and has_containers and has_comment:
        builder.add(InlineKeyboardButton(
            text="üöÄ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç", 
            callback_data="continue_route"
        ))
    
    # –†–∞–∑–º–µ—â–∞–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏ –ø–æ –æ–¥–Ω–æ–π –≤ —Ä—è–¥—É
    builder.adjust(1)
    
    return builder.as_markup()


def get_point_action_keyboard() -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—è —Å —Ç–æ—á–∫–æ–π –º–∞—Ä—à—Ä—É—Ç–∞.
    
    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ –ø—Ä–æ–ø—É—Å–∫–∞
    """
    builder = InlineKeyboardBuilder()
    
    builder.add(
        InlineKeyboardButton(
            text="üì∏ –û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ—á–∫—É",
            callback_data="process_point"
        ),
        InlineKeyboardButton(
            text="‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ç–æ—á–∫—É",
            callback_data="skip_point"
        )
    )
    
    # –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã –º–∞—Ä—à—Ä—É—Ç–∞
    builder.add(InlineKeyboardButton(
        text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç",
        callback_data="confirm_cancel_route"
    ))
    
    # –ö–Ω–æ–ø–∫–∏ –≤ –æ–¥–Ω–æ–º —Ä—è–¥—É, –æ—Ç–º–µ–Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ
    builder.adjust(2, 1)
    
    return builder.as_markup()


def get_route_selection_keyboard(routes_data: list, has_more: bool = False, offset: int = 0) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –º–∞—Ä—à—Ä—É—Ç–∞ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏.
    
    Args:
        routes_data: –°–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π —Å –¥–∞–Ω–Ω—ã–º–∏ –º–∞—Ä—à—Ä—É—Ç–æ–≤
        has_more: –ï—Å—Ç—å –ª–∏ –µ—â–µ –º–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
        offset: –¢–µ–∫—É—â–∏–π —Å–¥–≤–∏–≥ –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    
    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤—ã–±–æ—Ä–∞ –º–∞—Ä—à—Ä—É—Ç–æ–≤
    """
    builder = InlineKeyboardBuilder()
    
    for i, route_data in enumerate(routes_data):
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏: –¥–∞—Ç–∞ - –≥–æ—Ä–æ–¥ - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ—á–µ–∫
        date = route_data['date']
        city = route_data['city']
        points_count = route_data['points_count']
        total_containers = route_data['total_containers']
        
        button_text = f"üìÖ {date} - {city} ({points_count} —Ç–æ—á–µ–∫, {total_containers} –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤)"
        callback_data = create_route_callback(route_data['route_id'])
        
        builder.add(InlineKeyboardButton(
            text=button_text,
            callback_data=callback_data
        ))
    
    # –ö–Ω–æ–ø–∫–∞ "–ü–æ–∫–∞–∑–∞—Ç—å –µ—â–µ" –µ—Å–ª–∏ –µ—Å—Ç—å –±–æ–ª—å—à–µ –º–∞—Ä—à—Ä—É—Ç–æ–≤
    if has_more:
        builder.add(InlineKeyboardButton(
            text="üìã –ü–æ–∫–∞–∑–∞—Ç—å –µ—â–µ",
            callback_data=f"load_more_routes:{offset + len(routes_data)}"
        ))
    
    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    builder.add(InlineKeyboardButton(
        text="üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é",
        callback_data="back_to_main_menu"
    ))
    
    # –†–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ –æ–¥–Ω–æ–π –≤ —Ä—è–¥—É
    builder.adjust(1)
    
    return builder.as_markup()


def get_route_detail_keyboard(
    route_id: str,
    current_point_index: int,
    total_points: int,
    has_photos: bool = False,
    has_lab_data: bool = False
) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –º–∞—Ä—à—Ä—É—Ç–∞.
    
    Args:
        route_id: ID –º–∞—Ä—à—Ä—É—Ç–∞
        current_point_index: –ò–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–π —Ç–æ—á–∫–∏ (0-based)
        total_points: –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ—á–µ–∫
        has_photos: –ï—Å—Ç—å –ª–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —É —Ç–µ–∫—É—â–µ–π —Ç–æ—á–∫–∏
        has_lab_data: –ï—Å—Ç—å –ª–∏ –∏—Ç–æ–≥–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è–º
    
    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    """
    builder = InlineKeyboardBuilder()
    
    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —Ç–æ—á–∫–∞–º
    if current_point_index > 0:
        builder.add(InlineKeyboardButton(
            text="‚¨ÖÔ∏è –ü—Ä–µ–¥—ã–¥—É—â–∞—è —Ç–æ—á–∫–∞",
            callback_data=create_route_point_callback(route_id, current_point_index - 1)
        ))
    
    if current_point_index < total_points - 1:
        builder.add(InlineKeyboardButton(
            text="–°–ª–µ–¥—É—é—â–∞—è —Ç–æ—á–∫–∞ ‚û°Ô∏è",
            callback_data=create_route_point_callback(route_id, current_point_index + 1)
        ))
    
    # –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π (–µ—Å–ª–∏ –µ—Å—Ç—å)
    if has_photos:
        builder.add(InlineKeyboardButton(
            text="üì∏ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏",
            callback_data=create_photo_callback(route_id, current_point_index, 0)
        ))
    
    # –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–π (–µ—Å–ª–∏ –µ—Å—Ç—å)
    if has_lab_data:
        builder.add(InlineKeyboardButton(
            text="üè• –î–∞–Ω–Ω—ã–µ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–π",
            callback_data=create_lab_data_callback(route_id)
        ))
    
    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —Å–ø–∏—Å–∫—É –º–∞—Ä—à—Ä—É—Ç–æ–≤
    builder.add(InlineKeyboardButton(
        text="üìã –ö —Å–ø–∏—Å–∫—É –º–∞—Ä—à—Ä—É—Ç–æ–≤",
        callback_data="back_to_routes"
    ))
    
    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    builder.add(InlineKeyboardButton(
        text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        callback_data="back_to_main_menu"
    ))
    
    # –†–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫–∏
    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫ (—Ñ–æ—Ç–æ + –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏)
    special_buttons_count = int(has_photos) + int(has_lab_data)
    
    if current_point_index > 0 and current_point_index < total_points - 1:
        # –ù–∞–≤–∏–≥–∞—Ü–∏—è –≤ –æ–¥–Ω–æ–º —Ä—è–¥—É, –æ—Å—Ç–∞–ª—å–Ω—ã–µ –æ—Ç–¥–µ–ª—å–Ω–æ
        if special_buttons_count > 0:
            builder.adjust(2, *([1] * special_buttons_count), 1, 1)
        else:
            builder.adjust(2, 1, 1)
    else:
        builder.adjust(1)  # –í—Å–µ –∫–Ω–æ–ø–∫–∏ –æ—Ç–¥–µ–ª—å–Ω–æ
    
    return builder.as_markup()


def get_photos_viewer_keyboard(
    route_id: str,
    point_index: int,
    current_photo_index: int,
    total_photos: int
) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —Ç–æ—á–∫–∏ –º–∞—Ä—à—Ä—É—Ç–∞.
    
    Args:
        route_id: ID –º–∞—Ä—à—Ä—É—Ç–∞
        point_index: –ò–Ω–¥–µ–∫—Å —Ç–æ—á–∫–∏
        current_photo_index: –ò–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ (0-based)
        total_photos: –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
    
    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º
    """
    builder = InlineKeyboardBuilder()
    
    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º
    if current_photo_index > 0:
        builder.add(InlineKeyboardButton(
            text="‚¨ÖÔ∏è –ü—Ä–µ–¥—ã–¥—É—â–µ–µ —Ñ–æ—Ç–æ",
            callback_data=create_photo_callback(route_id, point_index, current_photo_index - 1)
        ))
    
    if current_photo_index < total_photos - 1:
        builder.add(InlineKeyboardButton(
            text="–°–ª–µ–¥—É—é—â–µ–µ —Ñ–æ—Ç–æ ‚û°Ô∏è",
            callback_data=create_photo_callback(route_id, point_index, current_photo_index + 1)
        ))
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
    builder.add(InlineKeyboardButton(
        text=f"üì∏ {current_photo_index + 1} –∏–∑ {total_photos}",
        callback_data="photo_info"
    ))
    
    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –¥–µ—Ç–∞–ª—è–º –º–∞—Ä—à—Ä—É—Ç–∞
    builder.add(InlineKeyboardButton(
        text="üîô –ö –¥–µ—Ç–∞–ª—è–º –º–∞—Ä—à—Ä—É—Ç–∞",
        callback_data=create_route_point_callback(route_id, point_index)
    ))
    
    # –†–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫–∏
    if current_photo_index > 0 and current_photo_index < total_photos - 1:
        builder.adjust(2, 1, 1)  # –ù–∞–≤–∏–≥–∞—Ü–∏—è –≤ –æ–¥–Ω–æ–º —Ä—è–¥—É
    else:
        builder.adjust(1)  # –í—Å–µ –∫–Ω–æ–ø–∫–∏ –æ—Ç–¥–µ–ª—å–Ω–æ
    
    return builder.as_markup()


def get_lab_selection_keyboard(labs_data: list) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∏—Ç–æ–≥–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö.
    
    Args:
        labs_data: –°–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π —Å –¥–∞–Ω–Ω—ã–º–∏ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–π
        –§–æ—Ä–º–∞—Ç: [{'organization': '–ö–î–õ', 'is_completed': False, 'points_count': 2}, ...]
    
    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤—ã–±–æ—Ä–∞ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–π
    """
    builder = InlineKeyboardBuilder()
    
    for lab_data in labs_data:
        organization = lab_data['organization']
        is_completed = lab_data.get('is_completed', False)
        points_count = lab_data.get('points_count', 0)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ —Å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–º —Å—Ç–∞—Ç—É—Å–∞
        status_emoji = "‚úÖ" if is_completed else "‚è≥"
        button_text = f"{status_emoji} {organization} ({points_count} —Ç–æ—á–µ–∫)"
        
        builder.add(InlineKeyboardButton(
            text=button_text,
            callback_data=f"select_lab:{organization}"
        ))
    
    # –ö–Ω–æ–ø–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–π (–¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤—Å–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã)
    all_completed = all(lab['is_completed'] for lab in labs_data)
    if all_completed:
        builder.add(InlineKeyboardButton(
            text="üèÅ –ó–∞–≤–µ—Ä—à–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç",
            callback_data="complete_route_final"
        ))
    
    # –†–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ –æ–¥–Ω–æ–π –≤ —Ä—è–¥—É
    builder.adjust(1)
    
    return builder.as_markup()


def get_lab_summary_management_keyboard(
    has_photos: bool = False,
    has_comment: bool = False,
    photos_count: int = 0,
    comment_text: str = "",
    organization: str = ""
) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏—Ç–æ–≥–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏.
    
    Args:
        has_photos: –ï—Å—Ç—å –ª–∏ –∏—Ç–æ–≥–æ–≤—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
        has_comment: –ï—Å—Ç—å –ª–∏ –∏—Ç–æ–≥–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
        photos_count: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
        comment_text: –¢–µ–∫—Å—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è (–¥–ª—è –ø—Ä–µ–≤—å—é)
        organization: –ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
    
    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã–º–∏ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏
    """
    builder = InlineKeyboardBuilder()
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
    if has_photos:
        photo_text = f"üì∏ –§–æ—Ç–æ ({photos_count} —à—Ç.) ‚úÖ"
        photo_callback = "edit_lab_photos"
    else:
        photo_text = "üì∏ –î–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏"
        photo_callback = "add_lab_photos"
    
    builder.add(InlineKeyboardButton(text=photo_text, callback_data=photo_callback))
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
    if has_comment:
        comment_preview = comment_text[:20] + "..." if len(comment_text) > 20 else comment_text
        comment_text_btn = f"üìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π ({comment_preview}) ‚úÖ"
        comment_callback = "edit_lab_comment"
    else:
        comment_text_btn = "üìù –î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
        comment_callback = "add_lab_comment"
    
    builder.add(InlineKeyboardButton(text=comment_text_btn, callback_data=comment_callback))
    
    # –ö–Ω–æ–ø–∫–∞ "–ó–∞–≤–µ—Ä—à–∏—Ç—å" - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ —Ñ–æ—Ç–æ
    if has_photos:
        builder.add(InlineKeyboardButton(
            text="‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–∞–Ω–Ω—É—é –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—é", 
            callback_data=f"complete_lab:{organization}"
        ))
    
    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —Å–ø–∏—Å–∫—É –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–π
    builder.add(InlineKeyboardButton(
        text="üîô –ö —Å–ø–∏—Å–∫—É –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–π",
        callback_data="back_to_lab_selection"
    ))
    
    # –†–∞–∑–º–µ—â–∞–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏ –ø–æ –æ–¥–Ω–æ–π –≤ —Ä—è–¥—É
    builder.adjust(1)
    
    return builder.as_markup()


def get_lab_photos_keyboard(photos_count: int) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏.
    
    Args:
        photos_count: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
    
    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏
    """
    builder = InlineKeyboardBuilder()
    
    if photos_count > 0:
        builder.add(
            InlineKeyboardButton(
                text=f"‚úÖ –ì–æ—Ç–æ–≤–æ ({photos_count} —Ñ–æ—Ç–æ)",
                callback_data="finish_lab_photos"
            ),
            InlineKeyboardButton(
                text="üì∏ –î–æ–±–∞–≤–∏—Ç—å –µ—â–µ",
                callback_data="add_more_lab_photos"
            )
        )
        
        # –ï—Å–ª–∏ —Ñ–æ—Ç–æ –±–æ–ª—å—à–µ 1, –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ
        if photos_count > 1:
            builder.add(InlineKeyboardButton(
                text="üóë –£–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Ñ–æ—Ç–æ",
                callback_data="remove_last_lab_photo"
            ))
        
        builder.adjust(2, 1)
    else:
        builder.add(InlineKeyboardButton(
            text="üì∏ –î–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–≤–æ–µ —Ñ–æ—Ç–æ",
            callback_data="add_first_lab_photo"
        ))
    
    return builder.as_markup()


def get_lab_comment_confirmation_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è.
    
    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    """
    builder = InlineKeyboardBuilder()
    
    builder.add(
        InlineKeyboardButton(
            text="‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π",
            callback_data="save_lab_comment"
        ),
        InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
            callback_data="cancel_lab_comment"
        )
    )
    
    builder.adjust(2)
    
    return builder.as_markup()


def get_route_lab_data_keyboard(route_id: str, labs_data: list) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ø–∏—Å–∫–∞ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–π –≤ —Ä–∞–º–∫–∞—Ö –º–∞—Ä—à—Ä—É—Ç–∞.
    
    Args:
        route_id: ID –º–∞—Ä—à—Ä—É—Ç–∞
        labs_data: –°–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π —Å –¥–∞–Ω–Ω—ã–º–∏ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–π
    
    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–π
    """
    builder = InlineKeyboardBuilder()
    
    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏
    for lab in labs_data:
        organization = lab['organization']
        photos_count = lab['photos_count']
        has_comment = lab['has_comment']
        
        # –ò–∫–æ–Ω–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
        photo_icon = f"üì∏{photos_count}" if photos_count > 0 else "üì∏‚ûñ"
        comment_icon = "üìù‚úÖ" if has_comment else "üìù‚ûñ"
        
        button_text = f"üè• {organization} ({photo_icon} {comment_icon})"
        
        builder.add(InlineKeyboardButton(
            text=button_text,
            callback_data=create_specific_lab_callback(route_id, organization)
        ))
    
    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞
    builder.add(InlineKeyboardButton(
        text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –º–∞—Ä—à—Ä—É—Ç—É",
        callback_data=create_back_to_route_callback(route_id, 0)
    ))
    
    # –†–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫–∏: –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏ –ø–æ –æ–¥–Ω–æ–π, –∫–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ –æ—Ç–¥–µ–ª—å–Ω–æ
    builder.adjust(1)
    
    return builder.as_markup()


def get_lab_data_viewer_keyboard(
    route_id: str, 
    organization: str, 
    current_photo_index: int, 
    total_photos: int,
    has_comment: bool
) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏.
    
    Args:
        route_id: ID –º–∞—Ä—à—Ä—É—Ç–∞
        organization: –ù–∞–∑–≤–∞–Ω–∏–µ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏
        current_photo_index: –ò–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
        total_photos: –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
        has_comment: –ù–∞–ª–∏—á–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
    
    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    """
    builder = InlineKeyboardBuilder()
    
    # –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º (–µ—Å–ª–∏ –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ)
    if total_photos > 1:
        if current_photo_index > 0:
            builder.add(InlineKeyboardButton(
                text="‚¨ÖÔ∏è –ü—Ä–µ–¥—ã–¥—É—â–∞—è",
                callback_data=create_lab_photo_callback(route_id, organization, current_photo_index - 1)
            ))
        
        if current_photo_index < total_photos - 1:
            builder.add(InlineKeyboardButton(
                text="–°–ª–µ–¥—É—é—â–∞—è ‚û°Ô∏è",
                callback_data=create_lab_photo_callback(route_id, organization, current_photo_index + 1)
            ))
    
    # –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è (–µ—Å–ª–∏ –µ—Å—Ç—å)
    if has_comment:
        builder.add(InlineKeyboardButton(
            text="üìù –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π",
            callback_data=create_lab_comment_callback(route_id, organization)
        ))
    
    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —Å–ø–∏—Å–∫—É –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–π
    builder.add(InlineKeyboardButton(
        text="‚¨ÖÔ∏è –ö —Å–ø–∏—Å–∫—É –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–π",
        callback_data=create_lab_data_callback(route_id)
    ))
    
    # –†–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫–∏
    if total_photos > 1:
        # –ù–∞–≤–∏–≥–∞—Ü–∏—è –≤ –æ–¥–Ω–æ–º —Ä—è–¥—É, –æ—Å—Ç–∞–ª—å–Ω—ã–µ –æ—Ç–¥–µ–ª—å–Ω–æ
        nav_buttons = 0
        if current_photo_index > 0:
            nav_buttons += 1
        if current_photo_index < total_photos - 1:
            nav_buttons += 1
        
        if nav_buttons == 2:
            builder.adjust(2, 1, 1)  # –ù–∞–≤–∏–≥–∞—Ü–∏—è –≤ –æ–¥–Ω–æ–º —Ä—è–¥—É
        else:
            builder.adjust(1)  # –í—Å–µ –∫–Ω–æ–ø–∫–∏ –æ—Ç–¥–µ–ª—å–Ω–æ
    else:
        builder.adjust(1)
    
    return builder.as_markup()
