#!/usr/bin/env python3
"""
–ú–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü lab_summaries –∏ lab_summary_photos.

–≠—Ç–∏ —Ç–∞–±–ª–∏—Ü—ã –Ω—É–∂–Ω—ã –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Ç–æ–≥–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è–º
–ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö —Ç–æ—á–µ–∫ –º–∞—Ä—à—Ä—É—Ç–∞.
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from sqlalchemy import text
from database.database import engine


async def add_lab_summaries_tables():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –∏—Ç–æ–≥–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è–º."""
    
    async with engine.begin() as conn:
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É lab_summaries
        await conn.execute(text("""
            CREATE TABLE IF NOT EXISTS lab_summaries (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                user_id BIGINT NOT NULL,
                route_session_id VARCHAR(50) NOT NULL,
                organization VARCHAR(50) NOT NULL,
                summary_comment TEXT,
                is_completed BOOLEAN DEFAULT 0,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (user_id) REFERENCES users (telegram_id) ON DELETE CASCADE
            );
        """))
        
        print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ lab_summaries —Å–æ–∑–¥–∞–Ω–∞")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É lab_summary_photos
        await conn.execute(text("""
            CREATE TABLE IF NOT EXISTS lab_summary_photos (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                lab_summary_id INTEGER NOT NULL,
                photo_file_id VARCHAR(255) NOT NULL,
                photo_order INTEGER DEFAULT 1,
                description TEXT,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (lab_summary_id) REFERENCES lab_summaries (id) ON DELETE CASCADE
            );
        """))
        
        print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ lab_summary_photos —Å–æ–∑–¥–∞–Ω–∞")
        
        # –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤
        await conn.execute(text("""
            CREATE INDEX IF NOT EXISTS idx_lab_summaries_session 
            ON lab_summaries (route_session_id);
        """))
        
        await conn.execute(text("""
            CREATE INDEX IF NOT EXISTS idx_lab_summaries_user 
            ON lab_summaries (user_id);
        """))
        
        await conn.execute(text("""
            CREATE INDEX IF NOT EXISTS idx_lab_summary_photos_lab 
            ON lab_summary_photos (lab_summary_id);
        """))
        
        print("‚úÖ –ò–Ω–¥–µ–∫—Å—ã —Å–æ–∑–¥–∞–Ω—ã")
        
        print("üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")


if __name__ == "__main__":
    asyncio.run(add_lab_summaries_tables())
